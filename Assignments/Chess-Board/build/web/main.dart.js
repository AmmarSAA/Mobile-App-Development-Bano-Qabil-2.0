// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const scaffold = flutter_sdk.src__material__scaffold;
  const basic = flutter_sdk.src__widgets__basic;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const app_bar = flutter_sdk.src__material__app_bar;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const flex = flutter_sdk.src__rendering__flex;
  const container = flutter_sdk.src__widgets__container;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const borders = flutter_sdk.src__painting__borders;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var homePage = Object.create(dart.library);
  var chessBoardShort = Object.create(dart.library);
  var $28_1_24 = Object.create(dart.library);
  var loginPage = Object.create(dart.library);
  var $toString = dartx.toString;
  var $modulo = dartx['%'];
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToRow: () => (T.intToRow = dart.constFn(dart.fnType(basic.Row, [core.int])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/pages/homePage.dart",
    "file:///zapp/project/lib/pages/chessBoardShort.dart",
    "file:///zapp/project/lib/pages/28-1-24.dart",
    "file:///zapp/project/lib/pages/loginPage.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Demo App!", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.amber}), home: new chessBoardShort.ChessBoardShort.new()});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.main = function main$0() {
    binding.runApp(C[1] || CT.C1);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  homePage.homePage = class homePage$ extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new homePage.homePage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new basic.Center.new({child: new text.Text.new("Hello World!", {style: new text_style.TextStyle.new({fontSize: 18, color: colors.Colors.blue, fontWeight: ui.FontWeight.bold, decoration: ui.TextDecoration.underline})})}), appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.amber, title: new text.Text.new("My App"), leading: new icon.Icon.new(icons.Icons.arrow_back)})});
    }
  };
  (homePage.homePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    homePage.homePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = homePage.homePage.prototype;
  dart.addTypeTests(homePage.homePage);
  dart.addTypeCaches(homePage.homePage);
  dart.setMethodSignature(homePage.homePage, () => ({
    __proto__: dart.getMethods(homePage.homePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(homePage.homePage, I[1]);
  chessBoardShort.ChessBoardShort = class ChessBoardShort extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new chessBoardShort.ChessBoardShort.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors.Colors.red, appBar: new app_bar.AppBar.new({title: new text.Text.new("Chess Game"), backgroundColor: colors.Colors.green, leading: new icon.Icon.new(icons.Icons.arrow_back)}), body: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.ListOfWidget().generate(6, dart.fn(index => chessBoardShort.rowWidget(index + 1), T.intToRow()))})});
    }
  };
  (chessBoardShort.ChessBoardShort.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    chessBoardShort.ChessBoardShort.__proto__.new.call(this, {key: key});
    ;
  }).prototype = chessBoardShort.ChessBoardShort.prototype;
  dart.addTypeTests(chessBoardShort.ChessBoardShort);
  dart.addTypeCaches(chessBoardShort.ChessBoardShort);
  dart.setMethodSignature(chessBoardShort.ChessBoardShort, () => ({
    __proto__: dart.getMethods(chessBoardShort.ChessBoardShort.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(chessBoardShort.ChessBoardShort, I[2]);
  chessBoardShort.rowWidget = function rowWidget(rowNumber) {
    if (rowNumber[$modulo](2) === 0) {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([chessBoardShort.boxWidget(colors.Colors.black), chessBoardShort.boxWidget(colors.Colors.white), chessBoardShort.boxWidget(colors.Colors.black), chessBoardShort.boxWidget(colors.Colors.white), chessBoardShort.boxWidget(colors.Colors.black), chessBoardShort.boxWidget(colors.Colors.white)])});
    } else {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([chessBoardShort.boxWidget(colors.Colors.white), chessBoardShort.boxWidget(colors.Colors.black), chessBoardShort.boxWidget(colors.Colors.white), chessBoardShort.boxWidget(colors.Colors.black), chessBoardShort.boxWidget(colors.Colors.white), chessBoardShort.boxWidget(colors.Colors.black)])});
    }
  };
  chessBoardShort.boxWidget = function boxWidget(color) {
    return new container.Container.new({height: 50, width: 50, color: color});
  };
  $28_1_24.RowColumn = class RowColumn extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new $28_1_24.RowColumn.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new("Hello World!", {style: new text_style.TextStyle.new({fontSize: 30, color: colors.Colors.green, fontWeight: ui.FontWeight.bold})}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})})])}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})})])}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})})])}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})})])}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})})])}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})}), new container.Container.new({color: colors.Colors.white, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.black})}), new container.Container.new({color: colors.Colors.black, height: 20, width: 20, child: new icon.Icon.new(icons.Icons.circle, {size: 15, color: colors.Colors.white})})])})])}), appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.blue, title: new text.Text.new("My App"), leading: new icon.Icon.new(icons.Icons.arrow_back)})});
    }
  };
  ($28_1_24.RowColumn.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    $28_1_24.RowColumn.__proto__.new.call(this, {key: key});
    ;
  }).prototype = $28_1_24.RowColumn.prototype;
  dart.addTypeTests($28_1_24.RowColumn);
  dart.addTypeCaches($28_1_24.RowColumn);
  dart.setMethodSignature($28_1_24.RowColumn, () => ({
    __proto__: dart.getMethods($28_1_24.RowColumn.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri($28_1_24.RowColumn, I[3]);
  loginPage.LoginWidget = class LoginWidget extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new loginPage.LoginWidget.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Login Page")}), body: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new basic.SizedBox.new({height: 20}), new text_field.TextField.new({keyboardType: text_input.TextInputType.emailAddress, decoration: new input_decorator.InputDecoration.new({hintText: "Enter Email Address", border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)}), focusedBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: new borders.BorderSide.new({width: 3})})})}), new basic.SizedBox.new({height: 10}), new text_field.TextField.new({obscureText: true, obscuringCharacter: "*", keyboardType: text_input.TextInputType.visiblePassword, decoration: new input_decorator.InputDecoration.new({hintText: "Enter Password", border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)}), focusedBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: new borders.BorderSide.new({width: 3})})})}), new basic.SizedBox.new({height: 10}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                core.print("Button Pressed");
              }, T.VoidTovoid()), child: new text.Text.new("Login", {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold})}), style: elevated_button.ElevatedButton.styleFrom({fixedSize: new ui.Size.new(100, 40)})})])})});
    }
  };
  (loginPage.LoginWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    loginPage.LoginWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = loginPage.LoginWidget.prototype;
  dart.addTypeTests(loginPage.LoginWidget);
  dart.addTypeCaches(loginPage.LoginWidget);
  dart.setMethodSignature(loginPage.LoginWidget, () => ({
    __proto__: dart.getMethods(loginPage.LoginWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(loginPage.LoginWidget, I[4]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/pages/homePage.dart": homePage,
    "file:///zapp/project/lib/pages/chessBoardShort.dart": chessBoardShort,
    "file:///zapp/project/lib/pages/28-1-24.dart": $28_1_24,
    "file:///zapp/project/lib/pages/loginPage.dart": loginPage
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/pages/homePage.dart","/zapp/project/lib/pages/chessBoardShort.dart","/zapp/project/lib/pages/28-1-24.dart","/zapp/project/lib/pages/loginPage.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,IA1BF,iCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;;;;;UCnC4B;AACxB,YAAO,iCACE,oBACA,yCACiB,6BAEhB;IAEZ;;;QAXmB;AAAb,8CAAa,GAAG;;EAAE;;;;;;;;;;AANH,IAArB;EAEF;;ECNwB;;;;;;UCDI;AACxB,YAA+B,kCACrB,6BACK,kBACT,wBACO,wCACO,WACI,gCACS,gCACI,2CAGzB,yCACoB,4BACjB,kBAAK,oBACH,kBAAW;IAG9B;;;QArBsB;AAAhB,qDAAgB,GAAG;;EAAE;;;;;;;;;;;;;UCOD;AACxB,YAAO,6CACmB,2BAChB,+BACC,kBAAK,gCACY,8BACd,kBAAW,iCAEjB,yCACiC,yCACtB,0BAAS,GAAG,QAAK,SACvB,0BAAU,AAAM,KAAD,GAAG;IAIjC;;;QAlB6B;AAAvB,mEAAuB,GAAG;;EAAE;;;;;;;;iDAqBlB;AAChB,QAAI,AAAU,AAAI,SAAL,UAAG,OAAK;AACnB,YAAO,uCACgC,yCAC1B,wBACH,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB;;AAI3B,YAAO,uCACgC,yCAC3B,wBACF,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB,sBACjB,0BAAiB;;EAI/B;iDAEuB;AACrB,UAAO,sCACG,WACD,WACA,KAAK;EAEhB;;;;;;UC7C4B;AACxB,YAA+B,kCACrB,yCACiC,mDACE,0CAC7B,wBACR,kBAAK,wBACM,wCACO,WACI,iCACS,wBAC/B,sCACuC,mDACE,0CAC7B,wBAWR,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,6BAKtB,sCACuC,mDACE,0CAC7B,wBACR,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,6BAKtB,sCACuC,mDACE,0CAC7B,wBACR,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,6BAKtB,sCACuC,mDACE,0CAC7B,wBACR,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,6BAKtB,sCACuC,mDACE,0CAC7B,wBACR,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,6BAKtB,sCACuC,mDACE,0CAC7B,wBACR,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAGlB,oCACkB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yBAEpB,oCACgB,6BACN,WACD,WACA,kBACC,2BACA,WACQ,yCAQlB,yCACoB,2BACjB,kBAAK,oBACH,kBAAW;IAC9B;;;QA3gBuB;AAAjB,sDAAiB,GAAG;;EAAE;;;;;;;;;;;;;UCJF;AACxB,YAAO,oCACG,+BACC,kBAAK,uBAER,0CAEmC,0CAC7B,wBACR,gCACU,MAEV,4CAC8B,mDAChB,mDACA,+BACF,uDACqB,wCAAS,sBAEvB,uDACgB,wCAAS,iBACxB,mCACH,WAIjB,gCACU,MAEV,2CAEe,0BACO,mBACQ,sDAChB,mDACA,0BACF,uDACqB,wCAAS,sBAEvB,uDACgB,wCAAS,iBACxB,mCACH,WAIjB,gCACU,MAEV,mDACa;AACc,gBAAvB,WAAM;yCAED,kBACL,iBACO,0CACkB,+BAGL,qDACT,gBAAK,KAAK;IAMjC;;;QArEyB;AAAnB,yDAAmB,GAAG;;EAAE","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__pages__homePage: homePage,
    zapp__project__lib__pages__chessBoardShort: chessBoardShort,
    zapp__project__lib__pages__28_1_24: $28_1_24,
    zapp__project__lib__pages__loginPage: loginPage
  };
}));

//# sourceMappingURL=main.js.map
